var searchIndex = JSON.parse('{\
"auteur":{"doc":"Auteur is a service that implements a <code>control interface</code> …","t":[0,0,0,5,0,0,0,0,0,3,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,12,11,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,3,3,12,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,3,17,3,3,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,3,13,4,13,3,13,13,3,3,13,3,4,3,4,3,3,13,3,3,13,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,5,5,12,12,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,12,11,11,11,12,12,11,11,12,12,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,3,3,3,8,13,4,3,3,3,3,3,13,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,10,12,12,11,11,11,11,12,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["config","controller","destination","main","mixer","node","server","source","utils","Config","augment_clap","borrow","borrow_mut","certificate_file","clap","fmt","from","from_clap","into","is_subcommand","key_file","log_path","port","try_from","try_into","type_id","use_tls","vzip","Controller","ErrorMessage","borrow","borrow","borrow_mut","borrow_mut","command_id","fmt","fmt","from","from","handle","handle","handle_message","into","into","msg","new","remote_addr","send_command_future","shutdown","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConsumerSlot","Destination","audio_appsrc","audio_producer","borrow","borrow","borrow_mut","borrow_mut","connect","consumer_slot","disconnect","family","from","from","handle","handle","handle","handle","handle","handle","handle","id","id","into","into","new","node_id","pipeline","pipeline_manager","start_local_file_pipeline","start_rtmp_pipeline","started","state_machine","state_machine","state_machine_mut","stop","stopped","stopping","transition","try_from","try_from","try_into","try_into","type_id","type_id","video_appsrc","video_producer","vzip","vzip","wait_for_eos","ConsumerSlot","DEFAULT_FALLBACK_TIMEOUT","Mixer","MixingState","audio_appsrc","audio_bin","audio_capsfilter","audio_mixer","audio_producer","audio_producer","base_plate_capsfilter","base_plate_timeout","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_base_plate","config","connect","connect_slot","consumer_slots","disconnect","fallback_timeout","fmt","from","from","from","handle","handle","handle","handle","handle","handle","handle","handle","id","into","into","into","mixing_state","new","node_id","pipeline","pipeline_manager","set_slot_volume","showing_base_plate","start_pipeline","started","state_machine","state_machine","state_machine_mut","stop","stopped","transition","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_config","update_mixing_state","video_appsrc","video_bin","video_capsfilter","video_capsfilter","video_mixer","video_producer","video_producer","volume","vzip","vzip","vzip","CommandMessage","Connect","ConsumerMessage","Destination","DestinationCommandMessage","Disconnect","Error","GetNodeInfoMessage","GetProducerMessage","Mixer","MixerCommandMessage","Node","NodeManager","NodeStatusMessage","RegisterListenerMessage","ScheduleMessage","Source","SourceCommandMessage","StartMessage","State","StopMessage","StoppedMessage","add_listener","audio_producer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","command","command","connect_future","consumers","create_destination","create_mixer","create_source","cue_time","cue_time","default","disconnect","disconnect_consumer","disconnect_consumers","end_time","end_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_info","get_info_future","handle","handle","handle","handle","handle","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","links","listeners","no_more_modes_sender","nodes","notify_listeners","producers","recipient","remove_node","schedule","send_destination_command_future","send_mixer_command_future","send_schedule_command_future","send_source_command_future","send_start_command_future","service_started","start","stop","stop_node","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","video_producer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","audio_producer","link_id","slot_id","video_producer","id","id","message","state","run","ws","0","0","Media","NewSourceBinMessage","NewSwitchMessage","Source","SourceStatusMessage","StreamMessage","audio_producer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","connect_pad","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle_stream_change","id","into","into","into","into","into","into","log_source_status","media","monitor_handle","monitor_switch","n_streams","new","next_time","node_id","pipeline","pipeline_manager","preroll","reinitialize","source_bin","src","started","starting","state_handle","state_machine","state_machine","state_machine_mut","stop","stopped","switches","transition","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unblock","uri","video_producer","vzip","vzip","vzip","vzip","vzip","vzip","0","0","BusMessage","ErrorMessage","PipelineManager","Schedulable","Skip","StateChangeResult","StateMachine","StopManagerMessage","StreamConsumer","StreamConsumers","StreamProducer","Success","WaitForEosMessage","add_consumer","appsink","appsink","appsrc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consumers","consumers","cue_time","current_latency","default","discard","do_schedule","drop","end_time","eos_receiver","eos_sender","eq","eq","equivalent","equivalent","first_buffer","fku_probe_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forwarded_latency","from","from","from","from","from","from","from","from","from","from","from","get_consumer_ids","get_hash","get_now","handle","handle","handle","handle","hash","id","into","into","into","into","into","into","into","into","into","into","latency_updated","make_element","new","new","next_time","node_id","pipeline","recipient","remove_consumer","reschedule","start_schedule","started","state","state_machine","state_machine_mut","stop_schedule","stopped","to_owned","transition","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_state","update_times","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["auteur","","","","","","","","","auteur::config","","","","","","","","","","","","","","","","","","","auteur::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur::destination","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur::mixer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur::node::ConsumerMessage","","","","auteur::node::NodeStatusMessage","","","","auteur::server","","auteur::source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Configuration options for the application","Interface with remote controller","A destination processing node.","Application entry point","A mixer processing node.","Implementation of a node management system","Implementation of the HTTP service","A source processing node.","A set of utilities for all nodes to use","","","","","Certificate public key file.","","","","","","","Certificate private key file.","Where logs should be stored","Port to use.","","","","Use TLS.","","Actor that represents an application controller.","Sent from [<code>Controller</code> to itself to notify the remote …","","","","","Identifier of the command that caused the error","","","","","","","Handle JSON messages from the controller.","","","Error message","Create a new <code>Controller</code> actor.","Address of the remote controller","Send a command to [<code>NodeManager</code>] for dispatching, then …","Shut down the controller","","","","","","","","","Represents the potential connection to a producer","The Destination actor","Audio input to the node","Audio producer","","","","","Implement Connect command","Optional connection point","Implement Disconnect command","Defines the nature of the destination","","","","","","","","","","Identifier of the slot","Unique identifier","","","Create a destination","","The wrapped pipeline","A helper for managing the pipeline","LocalFile family","RTMP family","","","Our state machine","","","","","","","","","","","","Video input to the node","Video producer","","","Wait for EOS to propagate down our pipeline before …","Represents a connection to a producer","","The Mixer actor","Used from our <code>compositor::samples_selected</code> callback","Audio input to <code>audiomixer</code>","Processing elements before <code>audiomixer</code>","For controlling the output sample rate","<code>compositor</code>","Audio producer","Output audio producer","For resizing the base plate","For how long no pad other than our base plate has …","","","","","","","Build the base plate. It may be either a live …","Mixing geometry and format","Implement Connect command","Connect an input slot to <code>compositor</code> and <code>audiomixer</code>","Input connection points","Implement Disconnect command","Optional timeout for showing the base plate","","","","","","","","","","","","","Unique identifier","","","","Used for showing and hiding the base plate","Create a mixer","","The wrapped pipeline","A helper for managing the pipeline","","Whether our base plate is opaque","Start our pipeline when cue_time is reached","","","Our state machine","","","","","","","","","","","","","","Implement UpdateConfig","Show or hide our base plate. Will be used in the future …","Video input to <code>compositor</code>","Processing elements before <code>compositor</code>","Used to reconfigure the geometry of the input video stream","For resizing our output video stream","<code>audiomixer</code>","Video producer","Output video producer","Volume of the <code>audiomixer</code> pad","","","","Sent from <code>controllers</code>, this is our public interface.","Lets the consumer perform a connection, it should store …","Sent from [<code>NodeManager</code>] to any consumer node in order to …","A destination node is a consumer","Destination-specific commands, sent from [<code>NodeManager</code>] to …","Lets the consumer disconnect a slot from its associated …","Node encountered an error","Retrieves node-specific information. Sent from […","Getter for <code>stream producers</code>, sent from [<code>NodeManager</code>] to …","A mixer node is both a consumer and a producer","Mixer-specific commands, sent from [<code>NodeManager</code>] to [<code>Mixer</code>…","All the node types NodeManager supports","NodeManager acts as a tracker of all nodes, and dispatches…","Sent from [<code>Node</code>] to [<code>NodeManager</code>] so that it can inform …","Sent from any [<code>NodeStatusMessage</code>] recipient to […","Reschedule a node, sent from [<code>NodeManager</code>] to any [<code>Node</code>]","A source node is a producer","Source-specific commands, sent from [<code>NodeManager</code>] to […","Start a node, sent from [<code>NodeManager</code>] to any [<code>Node</code>]","Node state changed","Sent from [<code>NodeManager</code>] to any [<code>Node</code>] in order to make it …","A node has stopped, sent from any node to [<code>NodeManager</code>]","","The output audio producer, if any","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The command to run","The command to dispatch to the source node","The command to dispatch to the destination node","The command to dispatch to the mixer node","Connect a producer and a consumer","All consumers by id","Create a [<code>Destination</code>] and store it as a consumer","Create a [<code>Mixer</code>] and store it as both a consumer and a …","Create a [<code>Source</code>] and store it as a producer","The start time of the [<code>Node</code>], if [<code>None</code>] it starts …","The new start time of the [<code>Node</code>], if [<code>None</code>] the current …","","Disconnect a consumer by id","Tell a node to disconnect one of its consumer slots","Look up all consumers for a given producer and tell them …","The end time of the [<code>Node</code>], if [<code>None</code>] the node will only …","The new end time of the [<code>Node</code>], if [<code>None</code>] the current time…","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get node-specific info","Get the info either of a specific [<code>Node</code>], or of all nodes","","","","","","Unique identifier of the node","","","","","","","","","","","","","","","","","All links, link_id -> consumer recipient","Listeners for unit tests and potential user interfaces. …","Used when the manager is “stopping”, to ensure all …","All nodes by id","","All producers by id","","Remove a node from our collections by id","Reschedule the node","Dispatch a [<code>Destination</code>] command","Dispatch a [<code>Mixer</code>] command","Reschedule a [<code>Node</code>]","Dispatch a [<code>Source</code>] command","Start a [<code>Node</code>]","","Start the node","Stop the node","Tell a node to stop, by id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The output video producer, if any","","","","","","","","","","","","","","","","The audio producer to connect to","The id of the slot","The id of the slot to disconnect","The video producer to connect to","","","","","Start the server based on the passed <code>Config</code>.","Create Subscriber/Publisher WebSocket actors.","","","The pipeline and various GStreamer elements that the …","Sent by the [<code>Source</code>] to notify itself that the …","Sent by the [<code>Source</code>] to notify itself that a new …","The Source actor","Sent by the [<code>Source</code>] to notify itself that the status of …","Sent by the [<code>Source</code>] to notify itself that a stream …","Output audio producer","","","","","","","","","","","","","Connect pads exposed by <code>falllbacksrc</code> to our output …","","","","","","","","","","","","","","","","","","","","","","","","A new pad was added, or an existing pad EOS’d","Unique identifier","","","","","","","Trace the status of the source for monitoring purposes","GStreamer elements when prerolling or playing","Statistics timer","Track the status of a new fallbackswitch","Increments when the src element exposes pads, decrements …","Create a source","","","The wrapped pipeline","A helper for managing the pipeline","Preroll the pipeline ahead of time (by default 10 seconds …","","<code>urisourcebin</code>, only used to monitor status","<code>fallbacksrc</code>","","Whether the stream is starting or ending","Scheduling timer","","Our state machine","","","","Vector of <code>fallbackswitch</code>, only used to monitor status","","","","","","","","","","","","","","","","","","","","Unblock a prerolling pipeline","URI the source will play","Output video producer","","","","","","","","","Maps GStreamer messages for consumption by a […","Sent from [<code>PipelineManager</code>] to nodes to signal an error","A wrapper around [<code>gst::Pipeline</code>] for monitoring its bus. …","(<code>Nodes</code>)[crate::node] should implement this trait in order …","Proceed to the next state","Controls how to schedule future state changes after a …","State machine governing the progression of a <code>node</code> state …","Sent from nodes to [<code>PipelineManager</code>] to tear it down","Wrapper around a consumer’s <code>appsrc</code>","Wrapper around a HashMap of consumers, exists for thread …","The interface for transporting media data from one node …","Wait for next time, if any, before progressing further","Sent from nodes to [<code>PipelineManager</code>] to wait for EOS to …","Add an appsrc to dispatch data to","Get the GStreamer <code>appsink</code> wrapped by this producer","The appsink to dispatch data for","The GStreamer <code>appsrc</code> of the consumer","","","","","","","","","","","","","","","","","","","","","","","","The consumers to dispatch data to","The consumers, link id -> consumer","When the node was scheduled to start","The currently-observed latency","","Whether appsrc samples should be forwarded to consumers …","Internal scheduling loop","","When the node was scheduled to end","To wait for EOS to be processed","To signal that EOS was processed","","","","","Whether a first buffer has made it through, used to …","The id of a pad probe that intercepts force-key-unit …","","","","","","","","","","Stop discarding data samples and start forwarding them to …","Whether an initial latency was forwarded to the <code>appsrc</code>","","","","","","","","","","","","Get the unique identifiers of all the consumers currently …","","In normal operation, now is the actual system time","","","","Scheduling timer","","The identifier of the creator node, for tracing","","","","","","","","","","","Whether the consumers’ appsrc latency needs updating","Wrapper around <code>gst::ElementFactory::make</code> with a better …","Create a new consumer","Create a new manager","","For tracing","The wrapped pipeline","The recipient for potential error messages","Remove a consumer appsrc by id","Reschedule state changes, fully valid in Initial and …","Start scheduling state changes, valid only in Initial …","","The current state of the node","Reference to the node state machine","Mutable reference to the node state machine","Stop the scheduling loop","","","Progress to the target state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utility function to perform sanity checks on reschedule …","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,3,2,3,2,3,2,2,2,2,3,3,2,2,2,2,2,3,2,3,2,3,2,3,0,0,4,5,5,4,5,4,4,4,4,4,5,4,4,4,4,4,4,4,4,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,5,4,4,5,5,4,4,0,0,0,0,6,6,7,7,6,7,7,8,6,7,8,6,7,8,7,7,7,7,7,7,7,8,6,7,8,7,7,7,7,7,7,7,7,7,6,7,8,7,7,7,7,7,7,8,7,7,7,7,7,7,7,7,6,7,8,6,7,8,6,7,8,7,7,6,6,6,7,7,6,7,6,6,7,8,0,9,0,10,0,9,11,0,0,10,0,0,0,0,0,0,10,0,0,11,0,0,12,13,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,11,10,11,10,14,15,16,17,12,12,12,12,12,19,20,12,12,12,12,19,20,14,15,16,17,18,19,20,21,13,22,11,23,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,10,12,12,12,12,12,12,13,23,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,12,12,12,12,12,12,23,12,10,12,12,12,12,12,12,10,10,12,11,10,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,13,12,9,14,15,16,17,18,19,20,21,13,22,11,23,10,24,24,25,24,26,27,27,26,0,0,28,29,0,0,0,0,0,0,30,31,30,32,28,29,33,31,30,32,28,29,33,30,31,30,32,28,29,33,31,30,32,28,29,33,30,30,30,30,30,30,30,30,30,30,30,30,30,31,30,32,28,29,33,30,30,30,30,31,30,30,30,31,31,30,30,31,31,30,32,30,30,30,30,30,30,31,30,31,30,32,28,29,33,31,30,32,28,29,33,31,30,32,28,29,33,30,30,30,31,30,32,28,29,33,34,35,0,0,0,0,36,0,0,0,0,0,0,36,0,37,37,37,38,36,37,39,38,38,34,40,41,35,42,43,36,37,39,38,34,40,41,35,42,43,37,37,37,39,43,39,43,39,44,38,43,41,41,37,38,37,38,38,38,37,39,38,34,40,41,35,42,43,37,38,36,37,37,39,38,34,40,41,35,42,43,37,38,0,41,41,41,43,38,41,36,37,39,38,34,40,41,35,42,43,39,0,38,41,44,44,41,41,37,44,44,41,43,44,44,44,41,37,44,36,37,39,38,34,40,41,35,42,43,36,37,39,38,34,40,41,35,42,43,36,37,39,38,34,40,41,35,42,43,44,44,36,37,39,38,34,40,41,35,42,43],"f":[null,null,null,[[],[["error",3],["result",4]]],null,null,null,null,null,null,[[["app",3]],["app",3]],[[]],[[]],null,[[],["app",3]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[]],[[],["bool",15]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["errormessage",3],["websocketcontext",3]]],[[["result",4],["message",4],["protocolerror",4]]],[[["websocketcontext",3],["str",15]]],[[]],[[]],null,[[["connectioninfo",3]],[["error",3],["result",4]]],null,[[["uuid",3],["command",4]]],[[["bool",15],["websocketcontext",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[["streamproducer",3],["str",15]],[["error",3],["result",4]]],null,[[["str",15]],[["error",3],["result",4]]],null,[[]],[[]],[[["consumermessage",4],["context",3]]],[[["startmessage",3],["context",3]]],[[["destinationcommandmessage",3],["context",3]]],[[["errormessage",3],["context",3]]],[[["schedulemessage",3],["context",3]]],[[["context",3],["stopmessage",3]]],[[["getnodeinfomessage",3],["context",3]]],null,null,[[]],[[]],[[["destinationfamily",4],["str",15]]],[[],["str",15]],null,null,[[["str",15],["option",4],["u32",15],["context",3]],[["result",4],["statechangeresult",4],["error",3]]],[[["context",3],["str",15]],[["result",4],["statechangeresult",4],["error",3]]],[[]],[[],["statemachine",3]],null,[[],["statemachine",3]],[[["context",3]]],[[]],[[],["running",4]],[[["context",3],["state",4]],[["result",4],["statechangeresult",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[["context",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4],["element",3]]],null,[[["streamproducer",3],["str",15]],[["error",3],["result",4]]],[[["consumerslot",3],["element",3],["pipeline",3],["str",15],["mixerconfig",3]],[["error",3],["result",4]]],null,[[["str",15]],[["error",3],["result",4]]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["context",3],["getproducermessage",3]]],[[["schedulemessage",3],["context",3]]],[[["consumermessage",4],["context",3]]],[[["getnodeinfomessage",3],["context",3]]],[[["startmessage",3],["context",3]]],[[["context",3],["stopmessage",3]]],[[["context",3],["mixercommandmessage",3]]],[[["errormessage",3],["context",3]]],null,[[]],[[]],[[]],null,[[["str",15],["mixerconfig",3]]],[[],["str",15]],null,null,[[["f64",15],["str",15]],[["error",3],["result",4]]],null,[[["context",3]],[["result",4],["statechangeresult",4],["error",3]]],[[]],[[],["statemachine",3]],null,[[],["statemachine",3]],[[["context",3]]],[[]],[[["context",3],["state",4]],[["result",4],["statechangeresult",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["i32",15],["option",4]],[["error",3],["result",4]]],[[["aggregator",3],["str",15],["clocktime",3],["mixingstate",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["weakrecipient",3],["nodestatusmessage",4]],[["error",3],["result",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nodestatusmessage",4]],[[],["node",4]],[[]],[[]],null,null,null,null,[[["str",15]],[["responseactfuture",6],["commandresult",4]]],null,[[["destinationfamily",4],["str",15]],["commandresult",4]],[[["str",15],["mixerconfig",3]],["commandresult",4]],[[["str",15]],["commandresult",4]],null,null,[[]],[[["str",15]],["commandresult",4]],[[["string",3],["recipient",3]]],[[["option",4],["streamproducer",3]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["responsefuture",6],["result",4]]],[[["option",4],["string",3]],[["responseactfuture",6],["commandresult",4]]],[[["context",3],["registerlistenermessage",3]]],[[["context",3],["stopmessage",3]]],[[["stoppedmessage",3],["context",3]]],[[["nodestatusmessage",4],["context",3]]],[[["commandmessage",3],["context",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["nodestatusmessage",4]]],null,null,[[["str",15]]],[[["schedulemessage",3]],[["responsefuture",6],["result",4]]],[[["destinationcommand",4],["str",15]],[["responseactfuture",6],["commandresult",4]]],[[["str",15],["mixercommand",4]],[["responseactfuture",6],["commandresult",4]]],[[["str",15],["datetime",3],["option",4]],[["responseactfuture",6],["commandresult",4]]],[[["str",15],["sourcecommand",4]],[["responseactfuture",6],["commandresult",4]]],[[["str",15],["datetime",3],["option",4]],[["responseactfuture",6],["commandresult",4]]],[[["context",3]]],[[["startmessage",3]],[["responsefuture",6],["result",4]]],[[]],[[["str",15]],["commandresult",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["config",3]]],[[["string",3],["httprequest",3],["path",3],["payload",3]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["bool",15],["streamproducer",3],["pipeline",3],["pad",3]],[["error",3],["result",4],["element",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["newsourcebinmessage",3],["context",3]]],[[["getnodeinfomessage",3],["context",3]]],[[["context",3],["stopmessage",3]]],[[["context",3],["getproducermessage",3]]],[[["errormessage",3],["context",3]]],[[["sourcecommandmessage",3],["context",3]]],[[["schedulemessage",3],["context",3]]],[[["newswitchmessage",3],["context",3]]],[[["startmessage",3],["context",3]]],[[["streammessage",3],["context",3]]],[[["sourcestatusmessage",3],["context",3]]],[[["bool",15],["context",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["context",3],["element",3]]],null,[[["str",15]]],[[],[["datetime",3],["option",4]]],[[],["str",15]],null,null,[[["context",3]],[["result",4],["statechangeresult",4],["error",3]]],[[],[["result",4],["statechangeresult",4],["error",3]]],null,null,[[]],null,null,[[],["statemachine",3]],null,[[],["statemachine",3]],[[["context",3]]],[[]],null,[[["context",3],["state",4]],[["result",4],["statechangeresult",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["context",3]],[["result",4],["statechangeresult",4],["error",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["appsrc",3],["str",15]]],[[],["appsink",3]],null,null,[[]],[[]],[[]],[[]],[[],["appsrc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamproducer",3]],[[]],null,null,null,null,[[]],null,[[["context",3]]],[[]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[["appsink",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3],["string",3]]],[[],["u64",15]],[[],[["datetime",3],["utc",3]]],[[["busmessage",3],["context",3]]],[[["context",3],["stopmanagermessage",3]]],[[["context",3],["waitforeosmessage",3]]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["option",4],["str",15]],[["error",3],["result",4],["element",3]]],[[["appsrc",3],["padprobeid",3],["str",15]]],[[["errormessage",3],["pipeline",3],["str",15],["weakrecipient",3]]],[[],[["datetime",3],["option",4]]],[[],["str",15]],null,null,[[["str",15]]],[[["context",3],["datetime",3],["option",4]],[["error",3],["result",4]]],[[["context",3],["datetime",3],["option",4]],[["error",3],["result",4]]],[[]],null,[[],["statemachine",3]],[[],["statemachine",3]],[[["context",3]]],[[]],[[]],[[["context",3],["state",4]],[["result",4],["statechangeresult",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["state",4]]],[[["option",4]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Config"],[3,"Controller"],[3,"ErrorMessage"],[3,"Destination"],[3,"ConsumerSlot"],[3,"ConsumerSlot"],[3,"Mixer"],[3,"MixingState"],[4,"ConsumerMessage"],[4,"Node"],[4,"NodeStatusMessage"],[3,"NodeManager"],[3,"StoppedMessage"],[3,"CommandMessage"],[3,"SourceCommandMessage"],[3,"DestinationCommandMessage"],[3,"MixerCommandMessage"],[3,"GetProducerMessage"],[3,"StartMessage"],[3,"ScheduleMessage"],[3,"StopMessage"],[3,"GetNodeInfoMessage"],[3,"RegisterListenerMessage"],[13,"Connect"],[13,"Disconnect"],[13,"State"],[13,"Error"],[3,"NewSwitchMessage"],[3,"NewSourceBinMessage"],[3,"Source"],[3,"Media"],[3,"StreamMessage"],[3,"SourceStatusMessage"],[3,"BusMessage"],[3,"ErrorMessage"],[4,"StateChangeResult"],[3,"StreamProducer"],[3,"StreamConsumer"],[3,"StreamConsumers"],[3,"WaitForEosMessage"],[3,"PipelineManager"],[3,"StopManagerMessage"],[3,"StateMachine"],[8,"Schedulable"]]},\
"auteur_controller":{"doc":"An example client to interface with the Auteur service","t":[13,13,4,4,13,13,4,13,13,13,13,13,4,13,4,3,13,13,13,13,13,13,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,4,3,13,13,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Connect","Create","CreateDestinationSubCommand","CreateNodeSubCommand","Destination","Destination","DestinationSubCommand","Disconnect","GetInfo","LocalFile","Mixer","Mixer","MixerSubCommand","Node","NodeSubCommand","Opts","Remove","Reschedule","Rtmp","SetSlotVolume","Source","Source","SourceSubCommand","Start","SubCommand","Update","augment_clap","augment_clap","augment_clap","augment_clap","augment_clap","augment_clap","augment_clap","augment_clap","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_file","controller","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_str","from_str","from_subcommand","from_subcommand","from_subcommand","from_subcommand","from_subcommand","from_subcommand","from_subcommand","into","into","into","into","into","into","into","into","into_app","into_app","into_app","into_app","into_app","into_app","into_app","into_app","main","server","subcmd","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","base_name","id","id","max_size_time","uri","fallback_image","fallback_timeout","height","id","id","sample_rate","subcmd","uri","width","height","id","id","sample_rate","slot_id","volume","width","cue_time","cue_time","end_time","end_time","id","id","id","id","link_id","link_id","sink_id","src_id","subcmd","subcmd","subcmd","subcmd","subcmd","Close","Controller","ControllerEvent","ControllerJoinHandle","Error","WebSocket","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","event_sender","exit_on_response_id","fmt","fmt","fmt","from","from","from","handle","into","into","into","into_future","new","poll","run_command","stop","stopped","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","websocket_sender"],"q":["auteur_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auteur_controller::CreateDestinationSubCommand","","","","","auteur_controller::CreateNodeSubCommand","","","","","","","","","auteur_controller::MixerSubCommand","","","","","","","auteur_controller::NodeSubCommand","","","","","","","","","","","","","auteur_controller::SubCommand","","","","auteur_controller::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Connect two existing nodes","Create a new node","Create a destination","Node-specific creation commands","Control destinations","Create a new destination","Destination-specific commands","Remove an existing link","Retrieve the info of all nodes or a specific node","Create a new local file destination","Control mixers","Create a new mixer","Mixer-specific commands","Create and connect nodes","Create and connect nodes","Top-level options","Remove an existing node","Reschedule any node","Create a new RTMP destination","Set volume of an input slot","Control sources","Create a new source","Source-specific commands","Cue a node for playback","Top-level subcommands","Update resolution and / or sample rate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TLS Certificate chain file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client application entry point","Address of the Auteur server, e.g. https://localhost:8080","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base path, extension and potentially %05d will get …","Unique identifier for the destination","Unique identifier for the destination","If set, the destination will split up the stream in …","RTMP URI","local fallback image path","local fallback image timeout, milliseconds","Height of the output picture","Unique identifier for the source","Unique identifier for the mixer","sample rate of the output audio","","The URI of the source","Width of the output picture","The new height","The id of an existing mixer","The id of an existing mixer","The new sample rate","The id of an existing slot","The new volume, 0-10, default 1","The new width","When to cue the node, None is immediate","The new cue time. If not specified, left unchanged","When to stop the node, None is never","The new end time. If not specified, left unchanged","The id of an existing node","The id of an existing node","The id of the node","The id of the node, if not specified, all nodes","The id of the link","The id of the link","The id of an existing consumer node","The id of an existing producer node","","","","","","Sent from stop() and other places.","Controller handle.","Events for the Publisher event loop.","Future that can be awaited on to wait for the controller …","Sent from anywhere if an error happens to report back.","Sent from the websocket receiver.","","","","","","","","","Connect to the WebSocket server and create a room.","Sender for the event loop","Whether the controller should exit the event loop after …","","","","","","","The handle","","","","","Run a new controller in the background","","Send a command to the event loop","Stops the controller.","Whether the controller was stopped","","","","","","","","","","","","","","","Sender for the websocket messages"],"i":[1,1,0,0,2,3,0,1,1,4,2,3,0,2,0,0,1,1,4,5,2,3,0,1,0,5,6,2,1,3,4,7,8,5,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,0,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,7,8,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,0,6,6,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,6,2,1,3,4,7,8,5,9,10,9,9,10,11,11,11,12,11,11,13,12,11,14,14,15,14,15,15,14,16,17,16,17,16,17,18,19,20,21,20,20,22,23,24,25,26,27,0,0,0,27,27,28,29,27,28,29,27,28,28,28,28,28,28,29,27,28,29,27,29,28,29,27,29,28,29,28,28,28,28,28,29,27,28,29,27,29,28,29,27,28,29,27,28],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["bool",15],["str",15]],[["result",4],["string",3]]],[[["bool",15],["str",15]],[["result",4],["string",3]]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],[["error",3],["result",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["controller",3]],[[]],[[["pathbuf",3],["string",3],["option",4]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["pathbuf",3],["string",3],["option",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["command",4],["bool",15]]],[[],[["error",3],["result",4]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null],"p":[[4,"NodeSubCommand"],[4,"SubCommand"],[4,"CreateNodeSubCommand"],[4,"CreateDestinationSubCommand"],[4,"MixerSubCommand"],[3,"Opts"],[4,"SourceSubCommand"],[4,"DestinationSubCommand"],[13,"LocalFile"],[13,"Rtmp"],[13,"Mixer"],[13,"Source"],[13,"Destination"],[13,"Update"],[13,"SetSlotVolume"],[13,"Start"],[13,"Reschedule"],[13,"Remove"],[13,"GetInfo"],[13,"Connect"],[13,"Disconnect"],[13,"Create"],[13,"Node"],[13,"Source"],[13,"Destination"],[13,"Mixer"],[4,"ControllerEvent"],[3,"Controller"],[3,"ControllerJoinHandle"]]},\
"auteur_controlling":{"doc":"","t":[0,4,4,13,3,13,13,13,13,13,4,4,3,13,13,13,13,4,3,13,13,13,13,13,4,3,3,3,13,3,4,4,13,13,13,3,13,13,13,4,3,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["controller","Command","CommandResult","Connect","ControllerMessage","CreateDestination","CreateMixer","CreateSource","Destination","Destination","DestinationCommand","DestinationFamily","DestinationInfo","Disconnect","Error","GetInfo","Graph","GraphCommand","Info","Info","Initial","LocalFile","Mixer","Mixer","MixerCommand","MixerConfig","MixerInfo","MixerSlotInfo","Node","NodeCommand","NodeCommands","NodeInfo","Remove","Reschedule","Rtmp","ServerMessage","SetSlotVolume","Source","Source","SourceCommand","SourceInfo","Start","Started","Starting","State","Stopped","Stopping","Success","UpdateConfig","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","consumer_slot_ids","consumer_slot_ids","cue_time","cue_time","cue_time","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end_time","end_time","end_time","eq","eq","fallback_image","fallback_timeout","family","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","height","height","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","nodes","result","sample_rate","sample_rate","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","slot_id","slots","state","state","state","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","volume","width","width","base_name","max_size_time","uri","config","cue_time","cue_time","end_time","end_time","family","id","id","id","id","id","id","id","link_id","link_id","sink_id","src_id","uri","height","sample_rate","slot_id","volume","width"],"q":["auteur_controlling","auteur_controlling::controllerauteur_controlling::controller::DestinationFamily","","","auteur_controlling::controller::GraphCommand","","","","","","","","","","","","","","","","","","auteur_controlling::controller::MixerCommand","","","",""],"d":["Definition of the service protocol","Command variants","Messages sent from the the server to the controller.","Connect a producer with a consumer","Messages sent from the controller to the server.","Create a destination","Create a mixer","Create a source","Destination-specific commands","","Commands to execute on a destination","The available types of destinations","Destination-specific information","Remove a connection between two nodes","The command resulted in an error","Retrieve the info of one or all nodes","","Generic commands for creating and removing nodes, …","A map of node-specific information in reply to a GetInfo …","Information about one or all nodes","The node is not running yet","Stream to a local file. No control is currently offered …","Mixer-specific commands","","Commands to execute on a mixer","Configuration of a mixer’s output stream","Mixer-specific information","Mixer-slot-specific information","","Node-specific commands","Node-specific command variants","Info variants","Remove a node","Reschedule any node","Stream to a RTMP server","Messages sent from the the server to the controller.","Set the volume of an input stream","Source-specific commands","","Commands to execute on a source","Source-specific information","Schedule any node for starting, possibly immediately","The node is playing","The node is preparing","The state of a node","The node has stopped","The node is stopping","The command was successful","Update the output format of the mixer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The command to execute","The command to run","The identifiers of the consumers of the source","The identifiers of the consumers of the mixer","When the source was scheduled to start","When the destination was scheduled to start","When the mixer was scheduled to start","","","","","","","","","","","","","","","","","","","","When the source was scheduled to end","When the destination was scheduled to end","When the mixer was scheduled to end","","","Whether an image should be displayed as the base plate","After how long to show the image when no other input …","The type of the destination","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The height of the output picture","The height of the output picture of the mixer","Unique identifier of the node","Identifier of the command","Identifier of the command result","","","","","","","","","","","","","","","","","","","","","","The command result","The sample rate of the output audio stream","The sample rate of the output audio stream of the mixer","","","","","","","","","","","","","","","","","","","","The identifier of the destination’s input slot","The mixer’s input slots","The state of the source","The state of the destination","The state of the mixer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The URI played back by the source","The volume of the slot","The width of the output picture","The width of the output picture of the mixer","The base name of the file(s), eg <code>/path/to/video</code>","An optional duration after which a new file should be …","The URI of the server","Initial configuration of the mixer","When to start the node. Immediate if None","When to start the node, the current time is left …","When to stop the node. Never if None","When to stop the node, the current time is left unchanged …","Type of the destination","Unique identifier of the source","Unique identifier of the destination","Unique identifier of the mixer","Unique identifier of the node","Identifier of an existing node","Identifier of an existing node","The id of an existing node, or None, in which case the …","Unique identifier of the created connection","Identifier of an existing connection","Identifier of an existing consumer","Identifier of an existing producer","URI to play back","Height of the output picture","Sample rate of the output audio","Unique identifier of the slot","New volume, 0.0 -> 10.0, 1.0 default","Width of the output picture"],"i":[0,0,0,1,0,1,1,1,2,3,0,0,0,1,4,1,5,0,0,4,6,7,2,3,0,0,0,0,5,0,0,0,1,1,7,0,8,2,3,0,0,1,6,6,0,6,6,4,8,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,6,7,6,7,11,13,14,17,14,15,17,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,14,15,17,6,7,12,12,15,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,6,7,12,17,11,13,19,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,7,18,19,12,17,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,15,17,14,15,17,6,7,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,9,10,8,2,11,12,1,5,13,6,7,14,15,16,17,3,18,4,19,14,16,12,17,20,20,21,22,23,24,23,24,25,26,25,22,23,24,27,28,29,30,29,29,26,31,31,32,32,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["state",4]],[[],["destinationfamily",4]],[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["state",4]],["bool",15]],[[["destinationfamily",4]],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["destinationfamily",4]],["bool",15]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"GraphCommand"],[4,"NodeCommands"],[4,"NodeInfo"],[4,"CommandResult"],[4,"Command"],[4,"State"],[4,"DestinationFamily"],[4,"MixerCommand"],[4,"SourceCommand"],[4,"DestinationCommand"],[3,"NodeCommand"],[3,"MixerConfig"],[3,"ControllerMessage"],[3,"SourceInfo"],[3,"DestinationInfo"],[3,"MixerSlotInfo"],[3,"MixerInfo"],[3,"Info"],[3,"ServerMessage"],[13,"LocalFile"],[13,"Rtmp"],[13,"CreateMixer"],[13,"Start"],[13,"Reschedule"],[13,"CreateDestination"],[13,"CreateSource"],[13,"Remove"],[13,"GetInfo"],[13,"Connect"],[13,"Disconnect"],[13,"UpdateConfig"],[13,"SetSlotVolume"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};